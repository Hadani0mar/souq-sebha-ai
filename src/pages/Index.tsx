import { useState } from "react";
import Header from "@/components/Header";
import SearchBar from "@/components/SearchBar";
import ProductCard from "@/components/ProductCard";
import ChatBox from "@/components/ChatBox";
import StoreCard from "@/components/StoreCard";
import LoadingCard from "@/components/LoadingCard";
import { useProducts } from "@/hooks/useProducts";
import { useWebhook } from "@/hooks/useWebhook";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { ShoppingBag, Store, MessageCircle, Sparkles } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import heroImage from "@/assets/hero-souq-sebha.jpg";

const Index = () => {
  const { products, stores, loading, searchProducts } = useProducts();
  const { sendToWebhook, searchProducts: webhookSearch } = useWebhook();
  const [activeTab, setActiveTab] = useState("home");
  const { toast } = useToast();

  const handleSearch = async (query: string) => {
    try {
      await searchProducts(query);
      setActiveTab("products");
      toast({
        title: "ุชู ุงูุจุญุซ ุจูุฌุงุญ",
        description: `ุชู ุงูุจุญุซ ุนู: ${query}`,
      });
    } catch (error) {
      toast({
        title: "ุฎุทุฃ ูู ุงูุจุญุซ",
        description: "ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุงูุจุญุซุ ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู",
        variant: "destructive",
      });
    }
  };

  const handleChatMessage = async (message: string): Promise<string> => {
    try {
      const response = await sendToWebhook(message);
      return response;
    } catch (error) {
      return "ุนุฐุฑุงูุ ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ูุนุงูุฌุฉ ุฑุณุงูุชู. ูุฑุฌู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู.";
    }
  };

  return (
    <div className="min-h-screen bg-background">
      <Header />
      
      <main className="container mx-auto px-4 py-8">
        {/* Hero Section */}
        <section className="text-center mb-12">
          <div 
            className="hero-gradient text-white rounded-2xl p-12 mb-8 elegant-shadow relative overflow-hidden"
            style={{
              backgroundImage: `linear-gradient(rgba(0,0,0,0.4), rgba(0,0,0,0.6)), url(${heroImage})`,
              backgroundSize: 'cover',
              backgroundPosition: 'center',
            }}
          >
            <div className="max-w-3xl mx-auto relative z-10">
              <h1 className="text-4xl md:text-5xl font-bold arabic-text mb-6">
                ๐ฌ ูุฑุญุจุงู ุจู ูู ุณูู ุณุจูุง
              </h1>
              <p className="text-xl mb-8 opacity-90 arabic-text">
                ููุตุชู ุงููุญููุฉ ููุจุญุซ ุนู ุงูููุชุฌุงุช ูุงููุชุงุฌุฑ ูู ุณุจูุงุ ููุจูุง
              </p>
              <SearchBar onSearch={handleSearch} isLoading={loading} />
            </div>
          </div>
        </section>

        {/* Main Content Tabs */}
        <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
          <TabsList className="grid w-full grid-cols-4 mb-8">
            <TabsTrigger value="home" className="flex items-center gap-2">
              <Sparkles className="h-4 w-4" />
              ุงูุฑุฆูุณูุฉ
            </TabsTrigger>
            <TabsTrigger value="products" className="flex items-center gap-2">
              <ShoppingBag className="h-4 w-4" />
              ุงูููุชุฌุงุช
            </TabsTrigger>
            <TabsTrigger value="stores" className="flex items-center gap-2">
              <Store className="h-4 w-4" />
              ุงููุชุงุฌุฑ
            </TabsTrigger>
            <TabsTrigger value="chat" className="flex items-center gap-2">
              <MessageCircle className="h-4 w-4" />
              ุงููุณุงุนุฏ ุงูุฐูู
            </TabsTrigger>
          </TabsList>

          <TabsContent value="home" className="space-y-8">
            {/* Quick Stats */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-card p-6 rounded-lg card-shadow text-center">
                <div className="text-3xl font-bold text-primary mb-2">{products.length}+</div>
                <div className="text-muted-foreground">ููุชุฌ ูุชููุฑ</div>
              </div>
              <div className="bg-card p-6 rounded-lg card-shadow text-center">
                <div className="text-3xl font-bold text-secondary mb-2">{stores.length}+</div>
                <div className="text-muted-foreground">ูุชุฌุฑ ูุดุงุฑู</div>
              </div>
              <div className="bg-card p-6 rounded-lg card-shadow text-center">
                <div className="text-3xl font-bold text-accent mb-2">24/7</div>
                <div className="text-muted-foreground">ุฎุฏูุฉ ูุชุงุญุฉ</div>
              </div>
            </div>

            {/* Featured Products */}
            <section>
              <h2 className="text-2xl font-bold arabic-text mb-6">ููุชุฌุงุช ูููุฒุฉ</h2>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {loading ? (
                // Loading state
                Array.from({ length: 6 }).map((_, index) => (
                  <LoadingCard key={index} />
                ))
              ) : (
                products.slice(0, 6).map((product, index) => (
                  <ProductCard key={index} {...product} />
                ))
              )}
            </div>
              {products.length === 0 && !loading && (
                <div className="text-center py-12 text-muted-foreground">
                  ูุง ุชูุฌุฏ ููุชุฌุงุช ูุชุงุญุฉ ุญุงููุงู
                </div>
              )}
            </section>
          </TabsContent>

          <TabsContent value="products" className="space-y-6">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold arabic-text">ุฌููุน ุงูููุชุฌุงุช</h2>
              <div className="text-sm text-muted-foreground">
                {products.length} ููุชุฌ ูุชููุฑ
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {loading ? (
                // Loading state
                Array.from({ length: 9 }).map((_, index) => (
                  <LoadingCard key={index} />
                ))
              ) : (
                products.map((product, index) => (
                  <ProductCard key={index} {...product} />
                ))
              )}
            </div>
            
            {products.length === 0 && !loading && (
              <div className="text-center py-12">
                <ShoppingBag className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-2">ูุง ุชูุฌุฏ ููุชุฌุงุช</h3>
                <p className="text-muted-foreground">ุฌุฑุจ ุงูุจุญุซ ุนู ููุชุฌ ูุนูู</p>
              </div>
            )}
          </TabsContent>

          <TabsContent value="stores" className="space-y-6">
            <div className="flex items-center justify-between">
              <h2 className="text-2xl font-bold arabic-text">ุงููุชุงุฌุฑ ุงููุดุงุฑูุฉ</h2>
              <div className="text-sm text-muted-foreground">
                {stores.length} ูุชุฌุฑ ูุดุงุฑู
              </div>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
              {stores.map((store, index) => (
                <StoreCard key={index} {...store} />
              ))}
            </div>
            
            {stores.length === 0 && !loading && (
              <div className="text-center py-12">
                <Store className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                <h3 className="text-lg font-semibold mb-2">ูุง ุชูุฌุฏ ูุชุงุฌุฑ</h3>
                <p className="text-muted-foreground">ุงููุชุงุฌุฑ ููุฏ ุงูุชุญุฏูุซ</p>
              </div>
            )}
          </TabsContent>

          <TabsContent value="chat" className="space-y-6">
            <div className="text-center mb-6">
              <h2 className="text-2xl font-bold arabic-text mb-2">ุงููุณุงุนุฏ ุงูุฐูู</h2>
              <p className="text-muted-foreground">ุงุณุฃู ุนู ุฃู ููุชุฌ ุฃู ูุชุฌุฑ ูู ุณุจูุง</p>
            </div>
            
            <ChatBox onSendMessage={handleChatMessage} />
          </TabsContent>
        </Tabs>
      </main>

      {/* Footer */}
      <footer className="bg-card mt-16 py-8 border-t">
        <div className="container mx-auto px-4 text-center">
          <div className="flex items-center justify-center gap-3 mb-4">
            <div className="hero-gradient p-2 rounded-full">
              <ShoppingBag className="h-5 w-5 text-white" />
            </div>
            <span className="text-lg font-bold arabic-text">ุณูู ุณุจูุง</span>
          </div>
          <p className="text-muted-foreground arabic-text">
            ููุตุฉ ููุจูุฉ ูุญููุฉ ููุจุญุซ ุนู ุงูููุชุฌุงุช ูุงููุชุงุฌุฑ ูู ุณุจูุง
          </p>
          <div className="mt-4 text-sm text-muted-foreground">
            ยฉ 2024 ุณูู ุณุจูุง. ุฌููุน ุงูุญููู ูุญููุธุฉ.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Index;
